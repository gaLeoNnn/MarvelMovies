{"version":3,"sources":["services/MarvelServices.js","hooks/http.hook.js","resources/error.gif","components/error/error.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["useMarvelServices","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","useHttp","_apiKey","_apiBase","getAllCharacters","offset","res","results","map","item","_transformCharacter","getCharacterById","_ref2","_callee2","id","_context2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getComicById","_ref3","_callee3","_context3","_transformComic","_x2","getAllComics","_ref4","_callee4","_args4","_context4","console","log","title","prices","price","pageCount","ErrorMessage","_jsx","src","style","display","margin","width","height","alt","View","_jsxs","_Fragment","children","className","href","RandomChar","setChar","useEffect","getRandomChar","_useMarvelServices","onChatLoaded","Math","floor","random","then","errorMessage","loadMessage","Spinner","content","onClick","mjolnir","CharList","props","disable","setDisable","_useState5","_useState6","newItemLoading","setNewItemLoading","_useState7","_useState8","setOffset","_useState9","_useState10","focusId","setFocusId","onRequest","timerScroll","onScroll","window","innerHeight","scrollY","document","offsetHeight","clearTimeout","setTimeout","addEventListener","removeEventListener","initial","onCharLoading","onCharsLoaded","_toConsumableArray","elem","imgStyled","focusLi","objectFit","onGetId","tabIndex","border","loadingMessage","disabled","Skeleton","index","itemId","resourceURI","substring","Link","to","CharInfo","updateChar","selectedId","chars","skeleton","MainPage","setSelectedId","decoration"],"mappings":"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","file":"static/js/3.8ee00a0b.chunk.js","sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelServices = () => {\n  const { loading, error, request } = useHttp();\n\n  const _apiKey = \"apikey=7f157a115b89c862a033dcc6e5812f12\";\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n  const _offset = 210;\n\n  const getAllCharacters = async (offset = 0) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n\n    return res.data.results.map(item => {\n      return _transformCharacter(item);\n    });\n  };\n\n  const getCharacterById = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : \"There is no description for this character\",\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const getComicById = async id => {\n    const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\n\n    return _transformComic(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = _offset) => {\n    const res = await request(`${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}`);\n    console.log(res.data.results[0]);\n    return res.data.results.map(item => {\n      return _transformComic(item);\n    });\n  };\n\n  const _transformComic = comics => {\n    console.log(`${comics.description} + hi `);\n    return {\n      id: comics.id,\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      prices: comics.prices[0].price + \"$\",\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\n    };\n  };\n\n  return { loading, error, getAllCharacters, getCharacterById, getAllComics, getComicById };\n};\n\nexport default useMarvelServices;\n","import { useCallback, useState } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"aplication/json\" }) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setLoading(false);\n\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n  );\n\n  return { loading, error, request };\n};\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from \"../../resources/error.gif\";\n\nconst ErrorMessage = () => {\n  return <img src={error} style={{ display: \"block\", margin: \"0 auto\", width: 200, height: 200 }} alt=\"error\" />;\n};\nexport default ErrorMessage;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport { useEffect, useState } from \"react\";\nimport useMarvelServices from \"../../services/MarvelServices\";\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from \"../error/error\";\n\nfunction RandomChar() {\n  const [char, setChar] = useState({});\n\n  useEffect(() => {\n    getRandomChar();\n  }, []);\n\n  const { loading, error, getCharacterById } = useMarvelServices();\n\n  const onChangeChar = () => {\n    getRandomChar();\n  };\n\n  const onChatLoaded = char => {\n    setChar(char);\n  };\n\n  const getRandomChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacterById(id).then(onChatLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const loadMessage = loading ? <Spinner /> : null;\n  const content = !error && !loading ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      <div className=\"randomchar__block\">\n        {errorMessage}\n        {loadMessage}\n        {content}\n      </div>\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\">\n          <div onClick={onChangeChar} className=\"inner\">\n            try it\n          </div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n\n  return (\n    <>\n      <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">wiki</div>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RandomChar;\n","import \"./charList.scss\";\nimport useMarvelServices from \"../../services/MarvelServices\";\nimport { useEffect, useState } from \"react\";\nimport ErrorMessage from \"../error/error\";\nimport Spinner from \"../spinner/spinner\";\n\nfunction CharList(props) {\n  const [char, setChar] = useState([]);\n  const [disable, setDisable] = useState(false);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [focusId, setFocusId] = useState(null);\n\n  const setFocusCard = id => {\n    setFocusId(id);\n  };\n\n  const { loading, error, getAllCharacters } = useMarvelServices();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  useEffect(() => {\n    let timerScroll;\n    const onScroll = () => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        if (timerScroll) {\n          clearTimeout(timerScroll);\n        }\n        timerScroll = setTimeout(() => {\n          onRequest(offset);\n        }, 1000);\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n      clearTimeout(timerScroll);\n    };\n  }, [offset]);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    onCharLoading();\n    getAllCharacters(offset).then(res => onCharsLoaded(res));\n  };\n\n  const onCharLoading = () => {\n    setDisable(true);\n  };\n\n  const onCharsLoaded = res => {\n    setChar(char => [...char, ...res]);\n    setDisable(false);\n    // setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n  };\n\n  const elem = char.map(item => {\n    let focusLi = \"char__item\";\n    if (item.id === focusId) {\n      focusLi = \"char__item char__item_selected\";\n    }\n\n    let imgStyled;\n    if (item.thumbnail == \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n      imgStyled = { objectFit: undefined };\n    } else {\n      imgStyled = { objectFit: \"cover\" };\n    }\n\n    return (\n      <li\n        onClick={() => {\n          props.onGetId(item.id);\n          setFocusCard(item.id);\n        }}\n        key={item.id}\n        tabIndex={0}\n        style={{ border: \"1px solid \" }}\n        className={focusLi}\n      >\n        <img src={item.thumbnail} style={imgStyled} alt=\"abyss\" />\n        <div className=\"char__name\">{item.name}</div>\n      </li>\n    );\n  });\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const loadingMessage = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      <ul className=\"char__grid\">\n        {errorMessage}\n        {loadingMessage}\n        {elem}\n      </ul>\n      <button disabled={disable} onClick={() => onRequest(offset)} className=\"button button__main button__long\">\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import \"./charInfo.scss\";\n\nimport { useEffect, useState } from \"react\";\nimport useMarvelServices from \"../../services/MarvelServices\";\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from \"../error/error\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport { Link } from \"react-router-dom\";\n\nfunction CharInfo(props) {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacterById } = useMarvelServices();\n\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  useEffect(() => {\n    updateChar();\n  }, [props.selectedId]);\n\n  const updateChar = () => {\n    const { selectedId } = props;\n\n    if (!selectedId) {\n      return;\n    }\n\n    getCharacterById(selectedId).then(onChatLoaded);\n  };\n\n  const onChatLoaded = chars => {\n    setChar(chars);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const loadingMessage = loading ? <Spinner /> : null;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const content = loading || error || !char ? null : <View char={char} />;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {loadingMessage}\n      {errorMessage}\n      {content}\n    </div>\n  );\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt=\"abyss\" />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">Homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((item, index) => {\n          const itemId = item.resourceURI.substring(43);\n          if (index <= 9) {\n            return (\n              <li key={index} className=\"char__comics-item\">\n                <Link to={`/comics/${itemId}`}>{item.name} </Link>\n              </li>\n            );\n          } else {\n            return;\n          }\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from \"../../resources/img/vision.png\";\nimport { useState } from \"react\";\n\nconst MainPage = () => {\n  const [selectedId, setSelectedId] = useState(null);\n  const onGetId = id => {\n    setSelectedId(id);\n  };\n\n  return (\n    <>\n      <main>\n        <RandomChar />\n        <div className=\"char__content\">\n          <CharList onGetId={onGetId} />\n          <CharInfo selectedId={selectedId} />\n        </div>\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n      </main>\n    </>\n  );\n};\nexport default MainPage;\n"],"sourceRoot":""}