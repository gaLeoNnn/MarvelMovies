{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","_ref","comic","_jsxs","_Fragment","children","_jsx","src","thumbnail","alt","className","title","description","pageCount","prices","Link","to","SingleComicPage","_useState","useState","_useState2","_slicedToArray","setComic","res","useParams","useEffect","onRequest","_useMarvelServices","useMarvelServices","getComicById","loading","error","comicId","then","onComicLoaded","errorMessage","ErrorMessage","loadingMessage","Spinner","content"],"mappings":"qMAwCMA,EAAO,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACd,OACEC,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,OAAKC,IAAKL,EAAMM,UAAWC,IAAI,QAAQC,UAAU,sBACjDP,eAAA,OAAKO,UAAU,qBAAoBL,SAAA,CACjCC,cAAA,MAAII,UAAU,qBAAoBL,SAAEH,EAAMS,QAC1CL,cAAA,KAAGI,UAAU,sBAAqBL,SAAEH,EAAMU,cAC1CN,cAAA,KAAGI,UAAU,sBAAqBL,SAAEH,EAAMW,YAC1CP,cAAA,KAAGI,UAAU,sBAAqBL,SAAC,oBACnCC,cAAA,OAAKI,UAAU,sBAAqBL,SAAEH,EAAMY,YAE9CR,cAACS,IAAI,CAACC,GAAG,UAAUN,UAAU,qBAAoBL,SAAC,oBAOzCY,UAlDS,WACtB,IAAAC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BhB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAMC,cAEZC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAAI,EAAyCC,cAAjCC,EAAYF,EAAZE,aAAcC,EAAOH,EAAPG,QAASC,EAAKJ,EAALI,MAEzBL,EAAY,WAChBG,EAAaN,EAAIS,SAASC,KAAKC,IAG3BA,EAAgB,SAAAhC,GACpBoB,EAASpB,IAGLiC,EAAeJ,EAAQzB,cAAC8B,IAAY,IAAM,KAC1CC,EAAiBP,EAAUxB,cAACgC,IAAO,IAAM,KACzCC,EAAUT,GAAWC,EAAQ,KAAOzB,cAACN,EAAI,CAACE,MAAOA,IAEvD,OACEC,eAAA,OAAKO,UAAU,eAAcL,SAAA,CAC1B8B,EACAE,EACAE","file":"static/js/6.be3b0491.chunk.js","sourcesContent":["import \"./singleComic.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport useMarvelServices from \"../../services/MarvelServices\";\nimport { useEffect, useState } from \"react\";\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from \"../error/error\";\n\nconst SingleComicPage = () => {\n  const [comic, setComic] = useState({});\n\n  const res = useParams();\n\n  useEffect(() => {\n    onRequest();\n  }, [res]);\n\n  const { getComicById, loading, error } = useMarvelServices();\n\n  const onRequest = () => {\n    getComicById(res.comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = comic => {\n    setComic(comic);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const loadingMessage = loading ? <Spinner /> : null;\n  const content = loading || error ? null : <View comic={comic} />;\n\n  return (\n    <div className=\"single-comic\">\n      {errorMessage}\n      {loadingMessage}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ comic }) => {\n  return (\n    <>\n      <img src={comic.thumbnail} alt=\"x-men\" className=\"single-comic__img\" />\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{comic.title}</h2>\n        <p className=\"single-comic__descr\">{comic.description}</p>\n        <p className=\"single-comic__descr\">{comic.pageCount}</p>\n        <p className=\"single-comic__descr\">Language: en-us</p>\n        <div className=\"single-comic__price\">{comic.prices}</div>\n      </div>\n      <Link to=\"/comics\" className=\"single-comic__back\">\n        Back to all\n      </Link>\n    </>\n  );\n};\n\nexport default SingleComicPage;\n"],"sourceRoot":""}